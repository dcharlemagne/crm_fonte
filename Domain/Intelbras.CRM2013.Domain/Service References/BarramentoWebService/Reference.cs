//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intelbras.CRM2013.Domain.BarramentoWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="MessageReceiver", ConfigurationName="BarramentoWebService.IMessageReceiver")]
    public interface IMessageReceiver {
        
        [System.ServiceModel.OperationContractAttribute(Action="MessageReceiver/IMessageReceiver/PostRequest", ReplyAction="MessageReceiver/IMessageReceiver/PostRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="MessageReceiver/IMessageReceiver/PostRequestExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void PostRequest(string header, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="MessageReceiver/IMessageReceiver/PostRequest", ReplyAction="MessageReceiver/IMessageReceiver/PostRequestResponse")]
        System.Threading.Tasks.Task PostRequestAsync(string header, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="MessageReceiver/IMessageReceiver/PostMessage", ReplyAction="MessageReceiver/IMessageReceiver/PostMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="MessageReceiver/IMessageReceiver/PostMessageExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageResponse PostMessage(Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores de retorno.
        [System.ServiceModel.OperationContractAttribute(Action="MessageReceiver/IMessageReceiver/PostMessage", ReplyAction="MessageReceiver/IMessageReceiver/PostMessageResponse")]
        System.Threading.Tasks.Task<Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageResponse> PostMessageAsync(Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="MessageReceiver/IMessageReceiver/Ping", ReplyAction="MessageReceiver/IMessageReceiver/PingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="MessageReceiver/IMessageReceiver/PingExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="MessageReceiver/IMessageReceiver/Ping", ReplyAction="MessageReceiver/IMessageReceiver/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PostMessage", WrapperNamespace="MessageReceiver", IsWrapped=true)]
    public partial class PostMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="MessageReceiver", Order=0)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="MessageReceiver", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="MessageReceiver", Order=2)]
        public string contract;
        
        public PostMessageRequest() {
        }
        
        public PostMessageRequest(string message, string version, string contract) {
            this.message = message;
            this.version = version;
            this.contract = contract;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PostMessageResponse", WrapperNamespace="MessageReceiver", IsWrapped=true)]
    public partial class PostMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="MessageReceiver", Order=0)]
        public bool PostMessageResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="MessageReceiver", Order=1)]
        public string response;
        
        public PostMessageResponse() {
        }
        
        public PostMessageResponse(bool PostMessageResult, string response) {
            this.PostMessageResult = PostMessageResult;
            this.response = response;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageReceiverChannel : Intelbras.CRM2013.Domain.BarramentoWebService.IMessageReceiver, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageReceiverClient : System.ServiceModel.ClientBase<Intelbras.CRM2013.Domain.BarramentoWebService.IMessageReceiver>, Intelbras.CRM2013.Domain.BarramentoWebService.IMessageReceiver {
        
        public MessageReceiverClient() {
        }
        
        public MessageReceiverClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageReceiverClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageReceiverClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageReceiverClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PostRequest(string header, string message) {
            base.Channel.PostRequest(header, message);
        }
        
        public System.Threading.Tasks.Task PostRequestAsync(string header, string message) {
            return base.Channel.PostRequestAsync(header, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageResponse Intelbras.CRM2013.Domain.BarramentoWebService.IMessageReceiver.PostMessage(Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageRequest request) {
            return base.Channel.PostMessage(request);
        }
        
        public bool PostMessage(string message, string version, string contract, out string response) {
            Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageRequest inValue = new Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageRequest();
            inValue.message = message;
            inValue.version = version;
            inValue.contract = contract;
            Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageResponse retVal = ((Intelbras.CRM2013.Domain.BarramentoWebService.IMessageReceiver)(this)).PostMessage(inValue);
            response = retVal.response;
            return retVal.PostMessageResult;
        }
        
        public System.Threading.Tasks.Task<Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageResponse> PostMessageAsync(Intelbras.CRM2013.Domain.BarramentoWebService.PostMessageRequest request) {
            return base.Channel.PostMessageAsync(request);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
    }
}
